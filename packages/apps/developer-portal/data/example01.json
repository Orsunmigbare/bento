{
  "openapi": "3.0.0",
  "info": {
    "version": "v1",
    "title": "Quantfolio API on qpm-demo"
  },
  "paths": {
    "/signin": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Takes an API-key and generates a token for use with the service.\r\nPut the token in the Authorization header like this:\r\nAuthorization: Bearer [token]\r\nSee Swagger for an example on how this should work.",
        "operationId": "SigninGet",
        "parameters": [
          {
            "name": "apiKey",
            "in": "query",
            "description": "Your provided API-key for the QPM component",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/funds/{id}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Returns information for a fund with the provided PerformanceId or ISIN.",
        "operationId": "FundsByIdGet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A performanceId or ISIN for a fund",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Instrument"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instrument"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instrument"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: expired, invalid or missing JWT token."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/funds": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Returns the list of all funds in the universe.",
        "operationId": "FundsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrument"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrument"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: expired, invalid or missing JWT token."
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/qpa/analyze": {
      "post": {
        "tags": [
          "Qpa"
        ],
        "operationId": "QpaAnalyzePost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioAnalyticsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioAnalyticsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioAnalyticsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: expired, invalid or missing JWT token."
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisRequest"
              }
            }
          }
        }
      }
    },
    "/qpa/analyze/riskreturn": {
      "post": {
        "tags": [
          "Qpa"
        ],
        "operationId": "QpaAnalyzeRiskreturnPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RiskReturnAnalysis"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskReturnAnalysis"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskReturnAnalysis"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: expired, invalid or missing JWT token."
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Portfolio"
        }
      }
    },
    "/qpa/analyze/expenseratio": {
      "post": {
        "tags": [
          "Qpa"
        ],
        "operationId": "QpaAnalyzeExpenseratioPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseRatioAnalysis"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseRatioAnalysis"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseRatioAnalysis"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: expired, invalid or missing JWT token."
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Portfolio"
        }
      }
    },
    "/qpa/frontiers/constrained": {
      "get": {
        "tags": [
          "Qpa"
        ],
        "summary": "Returns the constrained frontier for the given set of optionals, if any.",
        "operationId": "QpaFrontiersConstrainedGet",
        "parameters": [
          {
            "name": "optionals",
            "in": "query",
            "description": "A list of optionals",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Frontier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Frontier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Frontier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: expired, invalid or missing JWT token."
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/qpa/frontiers/unconstrained": {
      "get": {
        "tags": [
          "Qpa"
        ],
        "summary": "Returns the unconstrained frontier.",
        "operationId": "QpaFrontiersUnconstrainedGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Frontier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Frontier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Frontier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: expired, invalid or missing JWT token."
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/qpm": {
      "get": {
        "tags": [
          "Qpm"
        ],
        "summary": "Calculates the suggested new portfolio, the background data and the risk level of the existing portfolio.",
        "operationId": "QpmGet",
        "parameters": [
          {
            "name": "InvestmentHorizon",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RiskTolerance",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PeriodicSavings",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "StartingCapital",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "OptionList",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdviseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviseResult"
                }
              }
            }
          },
          "400": {
            "description": "Incomplete or missing input values"
          },
          "401": {
            "description": "Unauthorized: expired, invalid or missing JWT token."
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "requestBodies": {
      "Portfolio": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Portfolio"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/Portfolio"
            }
          },
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/Portfolio"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "token": {
        "name": "Authorization",
        "in": "header",
        "type": "apiKey",
        "description": "Please insert \"Bearer [JWT]\" into the api_key field. Use Authenticate action to get the JWT token"
      }
    },
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "Instrument": {
        "type": "object",
        "properties": {
          "isin": {
            "type": "string"
          },
          "expenseRatio": {
            "format": "double",
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "performanceId": {
            "type": "string"
          },
          "roboEligible": {
            "type": "boolean"
          }
        }
      },
      "AnalysisRequest": {
        "type": "object",
        "properties": {
          "customerProfile": {
            "$ref": "#/components/schemas/CustomerProfile"
          },
          "portfolio": {
            "$ref": "#/components/schemas/Portfolio"
          }
        }
      },
      "CustomerProfile": {
        "type": "object",
        "properties": {
          "investmentHorizon": {
            "format": "int32",
            "type": "integer"
          },
          "riskTolerance": {
            "format": "int32",
            "type": "integer"
          },
          "periodicSavings": {
            "format": "double",
            "type": "number"
          },
          "startingCapital": {
            "format": "double",
            "type": "number"
          },
          "optionList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Portfolio": {
        "type": "object",
        "properties": {
          "investments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Investment"
            }
          }
        }
      },
      "Investment": {
        "type": "object",
        "properties": {
          "isin": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "weight": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "PortfolioAnalyticsResult": {
        "type": "object",
        "properties": {
          "investmentAdvice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvestmentAdvice"
            }
          },
          "recommendedPortfolio": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          }
        }
      },
      "InvestmentAdvice": {
        "type": "object",
        "properties": {
          "investment": {
            "$ref": "#/components/schemas/PortfolioInstrument"
          },
          "benchmark": {
            "$ref": "#/components/schemas/PortfolioBenchmark"
          },
          "advice": {
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer"
          },
          "assetClass": {
            "$ref": "#/components/schemas/AssetClass"
          }
        }
      },
      "Allocation": {
        "required": [
          "weight"
        ],
        "type": "object",
        "properties": {
          "assetClass": {
            "$ref": "#/components/schemas/AssetClass"
          },
          "instrument": {
            "$ref": "#/components/schemas/Instrument"
          },
          "weight": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "PortfolioInstrument": {
        "type": "object",
        "properties": {
          "isin": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "analysisData": {
            "$ref": "#/components/schemas/AnalysisData"
          },
          "analysisScore": {
            "$ref": "#/components/schemas/AnalysisScore"
          }
        }
      },
      "PortfolioBenchmark": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "analysisData": {
            "$ref": "#/components/schemas/AnalysisData"
          }
        }
      },
      "AssetClass": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "subclassCode": {
            "type": "string"
          }
        }
      },
      "AnalysisData": {
        "type": "object",
        "properties": {
          "yearsHistory": {
            "format": "double",
            "type": "number"
          },
          "return1Y": {
            "format": "double",
            "type": "number"
          },
          "return3Y": {
            "format": "double",
            "type": "number"
          },
          "return5Y": {
            "format": "double",
            "type": "number"
          },
          "return10Y": {
            "format": "double",
            "type": "number"
          },
          "returnFrontier": {
            "format": "double",
            "type": "number"
          },
          "volatility1Y": {
            "format": "double",
            "type": "number"
          },
          "volatility3Y": {
            "format": "double",
            "type": "number"
          },
          "volatility5Y": {
            "format": "double",
            "type": "number"
          },
          "volatility10Y": {
            "format": "double",
            "type": "number"
          },
          "volatilityFrontier": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "AnalysisScore": {
        "type": "object",
        "properties": {
          "returnScore": {
            "format": "double",
            "type": "number"
          },
          "sharpeScore": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "RiskReturnAnalysis": {
        "type": "object",
        "properties": {
          "risk": {
            "format": "double",
            "type": "number"
          },
          "return": {
            "format": "double",
            "type": "number"
          },
          "percentageAnalyzed": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "ExpenseRatioAnalysis": {
        "type": "object",
        "properties": {
          "weightedExpenseRatio": {
            "format": "double",
            "type": "number"
          },
          "percentageAnalyzed": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "Frontier": {
        "type": "object",
        "properties": {
          "risk": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          },
          "return": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        }
      },
      "AdviseResult": {
        "required": [
          "savingsPlan",
          "marketReturns",
          "recommendedPortfolio",
          "forecastedAnnualReturn"
        ],
        "type": "object",
        "properties": {
          "savingsPlan": {
            "$ref": "#/components/schemas/SeriesPair"
          },
          "marketReturns": {
            "$ref": "#/components/schemas/SeriesPair"
          },
          "recommendedPortfolio": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          },
          "forecastedAnnualReturn": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "SeriesPair": {
        "type": "object",
        "properties": {
          "backtest": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "format": "double",
                "type": "number"
              }
            }
          },
          "forecast": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "format": "double",
                "type": "number"
              }
            }
          }
        }
      }
    }
  }
}